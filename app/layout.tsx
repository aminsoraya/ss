import type { Metadata } from "next";
import localFont from "next/font/local";
import "./globals.css";
import Layout from "@/components/layout/layout";
import { Meta } from "@/types";
import { headers } from "next/headers";

const iranSans = localFont({
  src: "./fonts/IRANSansWeb_Medium.woff2",
  variable: "--font-geist-mono",
  weight: "100 900",
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const headersList = headers();
  const referer = headersList.get("referer");

  const isTrendyolRoute = referer?.includes("/trendyol");

  console.log({referer})

  const route = isTrendyolRoute
    ? process.env.NEXT_PUBLIC_TRENDYOL_INITIAL!
    : process.env.NEXT_PUBLIC_META_URL!;

  const initialData = await fetch(route.toString(), {
    next: {
      revalidate: 0,
    },
  }).then((res) => res.json());

  let parseMetaData: Meta | undefined = undefined;

  if (initialData) {
    const { headers, subHeaders, footers } = initialData as Meta;
    parseMetaData = {
      headers,
      subHeaders,
      footers,
    };
  }

  return (
    <html lang="en">
      <body className={`  ${iranSans.variable}   `}>
        {parseMetaData && <Layout {...parseMetaData!} pathName="/trendyol">{children}</Layout>}
      </body>
    </html>
  );
}
